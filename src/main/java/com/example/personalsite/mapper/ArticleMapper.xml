<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.personalsite.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.example.personalsite.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="reading" jdbcType="BIGINT" property="reading" />
    <result column="releaseDate" jdbcType="TIMESTAMP" property="releasedate" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.personalsite.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <sql id="Base_Column_List">
    id, title, author, category, reading, releaseDate
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_t
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_t
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.personalsite.model.Article">
    insert into article_t (id, title, author, 
      category, reading, releaseDate, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{reading,jdbcType=BIGINT}, #{releasedate,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.personalsite.model.Article">
    insert into article_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="reading != null">
        reading,
      </if>
      <if test="releasedate != null">
        releaseDate,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="reading != null">
        #{reading,jdbcType=BIGINT},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.personalsite.model.Article">
    update article_t
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="reading != null">
        reading = #{reading,jdbcType=BIGINT},
      </if>
      <if test="releasedate != null">
        releaseDate = #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.personalsite.model.Article">
    update article_t
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      reading = #{reading,jdbcType=BIGINT},
      releaseDate = #{releasedate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.personalsite.model.Article">
    update article_t
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      reading = #{reading,jdbcType=BIGINT},
      releaseDate = #{releasedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>